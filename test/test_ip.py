# coding: utf-8

"""
    HyperOne

    HyperOne API  # noqa: E501

    The version of the OpenAPI document: 0.1.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import h1-client-python
from h1-client-python.models.ip import Ip  # noqa: E501
from h1-client-python.rest import ApiException

class TestIp(unittest.TestCase):
    """Ip unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test Ip
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = h1-client-python.models.ip.Ip()  # noqa: E501
        if include_optional :
            return Ip(
                id = '0', 
                name = '0', 
                flavour = '0', 
                modified_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                modified_by = '0', 
                created_on = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                created_by = '0', 
                state = 'Associated', 
                project = '0', 
                uri = '0', 
                address = '0', 
                fqdn = '0', 
                network = '0', 
                ptr_record = '0', 
                persistent = True, 
                associated = h1-client-python.models.ip_associated.ip_associated(
                    ip = '0', 
                    fip = '0', 
                    netadp = '0', ), 
                tag = [
                    h1-client-python.models.tag.tag(
                        id = '0', 
                        key = '0', 
                        value = '0', )
                    ]
            )
        else :
            return Ip(
        )

    def testIp(self):
        """Test Ip"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
